# GitLab with Let's Encrypt in a Docker Compose

# Author
# hey, Iâ€™m Vladimir Mikhalev, but my friends call me Valdemar.

# My website with detailed IT guides: https://www.heyvaldemar.com/
# Follow me on YouTube: https://www.youtube.com/channel/UCf85kQ0u1sYTTTyKVpxrlyQ?sub_confirmation=1
# Follow me on Twitter: https://twitter.com/heyValdemar
# Follow me on Instagram: https://www.instagram.com/heyvaldemar/
# Follow me on Facebook: https://www.facebook.com/heyValdemarFB/
# Follow me on TikTok: https://www.tiktok.com/@heyvaldemar
# Follow me on LinkedIn: https://www.linkedin.com/in/heyvaldemar/
# Follow me on GitHub: https://github.com/heyvaldemar

# Communication
# Chat with IT pros on Discord: https://discord.gg/AJQGCCBcqf
# Reach me at ask@sre.gg

# Give Thanks
# Support on GitHub: https://github.com/sponsors/heyValdemar
# Support on Patreon: https://www.patreon.com/heyValdemar
# Support on BuyMeaCoffee: https://www.buymeacoffee.com/heyValdemar
# Support on Ko-fi: https://ko-fi.com/heyValdemar
# Support on PayPal: https://www.paypal.com/paypalme/heyValdemarCOM

# Install Docker Engine and Docker Compose by following my guide: https://www.heyvaldemar.com/install-docker-engine-and-docker-compose-on-ubuntu-server/

# Deploy GitLab server with a Docker Compose using the command:
# docker compose -f gitlab-traefik-letsencrypt-docker-compose.yml -p gitlab up -d

# Visit the GitLab URL, and sign in with the username root and the password from the following command:
# sudo docker exec -it $(sudo docker ps -aqf "name=gitlab-gitlab-1") grep 'Password:' /etc/gitlab/initial_root_password

# Get the GitLab Runner's registration token via this link (replace domain with yours):
# https://gitlab.heyvaldemar.net/admin/runners

# Register the GitLab Runner with an obtained token:
# REGISTRATION_TOKEN=125DGwcgyrAsVVjUkxTL \
# && docker exec -it $(sudo docker ps -aqf "name=gitlab-runner-1") gitlab-runner register \
# --non-interactive \
# --url "http://gitlab/" \
# --registration-token "$REGISTRATION_TOKEN" \
# --executor "docker" \
# --docker-image docker:stable \
# --description "docker-runner-1" \
# --tag-list "docker,linux" \
# --run-untagged="true" \
# --docker-privileged \
# --output-limit "50000000" \
# --access-level="not_protected" \
# --docker-volumes "/var/run/docker.sock:/var/run/docker.sock"

volumes:
  gitlab-data:
  gitlab-logs:
  gitlab-config:
  gitlab-runner-config:
  gitlab-postgres:
  traefik-certificates:

services:
  postgres:
    # Image tag (replace with yours)
    image: postgres:14
    volumes:
      - gitlab-postgres:/var/lib/postgresql/data
    environment:
      # Database name (replace with yours)
      POSTGRES_DB: gitlabhq_production
      # Database user (replace with yours)
      POSTGRES_USER: gitlab
      # Database password (replace with yours)
      POSTGRES_PASSWORD: zkhuneTBFxpgvUrtDaKs9XG
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -h 127.0.0.1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  gitlab:
    # Image tag (replace with yours)
    image: gitlab/gitlab-ee:16.1.2-ee.0
    volumes:
      - gitlab-data:/var/opt/gitlab
      - gitlab-logs:/var/log/gitlab
      - gitlab-config:/etc/gitlab
    shm_size: "256m"
    environment:
    # GitLab Omnibus config (replace with yours)
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'https://gitlab.heyvaldemar.net'
        gitlab_rails['gitlab_shell_ssh_port'] = 2222
        nginx['enable'] = true
        nginx['listen_port'] = 80
        nginx['listen_https'] = false
        nginx['proxy_set_headers'] = {
                'X-Forwarded-Proto' => 'https',
                'X-Forwarded-Ssl' => 'on'
        }
        gitlab_rails['db_adapter'] = "postgresql"
        gitlab_rails['db_encoding'] = "unicode"
        gitlab_rails['db_host'] = "postgres"
        gitlab_rails['db_database'] = "gitlabhq_production"
        gitlab_rails['db_username'] = "gitlab"
        gitlab_rails['db_password'] = "zkhuneTBFxpgvUrtDaKs9XG"
        gitlab_rails['smtp_enable'] = true
        gitlab_rails['smtp_address'] = "smtp-relay.gmail.com"
        gitlab_rails['smtp_port'] = 587
        gitlab_rails['smtp_user_name'] = "gitlab@heyvaldemar.net"
        gitlab_rails['smtp_password'] = "YourPassword"
        gitlab_rails['smtp_domain'] = "smtp-relay.gmail.com"
        gitlab_rails['smtp_authentication'] = "login"
        gitlab_rails['smtp_enable_starttls_auto'] = true
        gitlab_rails['smtp_tls'] = false
        gitlab_rails['gitlab_email_from'] = "gitlab@heyvaldemar.net"
        gitlab_rails['gitlab_email_reply_to'] = "gitlab@heyvaldemar.net"
        postgresql['enable'] = false
        nginx['listen_port'] = 80
        nginx['listen_https'] = false
        nginx['proxy_set_headers'] = {
                "X-Forwarded-Proto" => "https",
                "X-Forwarded-Ssl" => "on"
        }
        registry['enable'] = false
    ports:
      - "2222:22"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 240s
    labels:
      - "traefik.enable=true"
      # GitLab URL (replace with yours)
      - "traefik.http.routers.gitlab.rule=Host(`gitlab.heyvaldemar.net`)"
      - "traefik.http.routers.gitlab.service=gitlab"
      - "traefik.http.routers.gitlab.entrypoints=websecure"
      - "traefik.http.services.gitlab.loadbalancer.server.port=80"
      - "traefik.http.routers.gitlab.tls=true"
      - "traefik.http.routers.gitlab.tls.certresolver=letsencrypt"
      - "traefik.http.services.gitlab.loadbalancer.passhostheader=true"
      - "traefik.http.routers.gitlab.middlewares=compresstraefik"
      - "traefik.http.middlewares.compresstraefik.compress=true"
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      traefik:
        condition: service_healthy

  gitlab-runner-1:
    # Image tag (replace with yours)
    image: gitlab/gitlab-runner:ubuntu-v16.1.0
    volumes:
      - gitlab-runner-config:/etc/gitlab-runner
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    depends_on:
      gitlab:
        condition: service_healthy

  traefik:
    # Image tag (replace with yours)
    image: traefik:2.8
    command:
      - "--log.level=WARN"
      - "--accesslog=true"
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--ping=true"
      - "--ping.entrypoint=ping"
      - "--entryPoints.ping.address=:8082"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--providers.docker=true"
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--providers.docker.exposedByDefault=false"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      # Email for Let's Encrypt (replace with yours)
      - "--certificatesresolvers.letsencrypt.acme.email=callvaldemar@gmail.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=/etc/traefik/acme/acme.json"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.buckets=0.1,0.3,1.2,5.0"
      - "--global.checkNewVersion=true"
      - "--global.sendAnonymousUsage=false"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - traefik-certificates:/etc/traefik/acme
    ports:
      - "80:80"
      - "443:443"
    healthcheck:
      test: ["CMD", "wget", "http://localhost:8082/ping","--spider"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    labels:
      - "traefik.enable=true"
      # Traefik URL (replace with yours)
      - "traefik.http.routers.dashboard.rule=Host(`traefik.gitlab.heyvaldemar.net`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.services.dashboard.loadbalancer.server.port=8080"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.services.dashboard.loadbalancer.passhostheader=true"
      - "traefik.http.routers.dashboard.middlewares=authtraefik"
      # Basic Authentication for Traefik Dashboard
      # Username: traefikadmin (replace with yours)
      # Passwords must be encoded using MD5, SHA1, or BCrypt https://hostingcanada.org/htpasswd-generator/
      - "traefik.http.middlewares.authtraefik.basicauth.users=traefikadmin:$$2y$$10$$sMzJfirKC75x/hVpiINeZOiSm.Jkity9cn4KwNkRvO7hSQVFc5FLO"
      - "traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    restart: unless-stopped
